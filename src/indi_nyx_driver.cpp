/* INDI-Nyx Driver
 * Author: JÃ©rÃ´me ODIER <jerome.odier@lpsc.in2p3.fr>
 * SPDX-License-Identifier: GPL-2.0-only
 */

/*--------------------------------------------------------------------------------------------------------------------*/

#include "bridge.h"

#include "indi_nyx_driver.hpp"

/*--------------------------------------------------------------------------------------------------------------------*/
/* GLOBAL INSTANCE                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

std::unique_ptr<IndiNyxDriver> indiNyx(new IndiNyxDriver());

/*--------------------------------------------------------------------------------------------------------------------*/
/* INDI_NYX_DRIVER                                                                                                    */
/*--------------------------------------------------------------------------------------------------------------------*/

IndiNyxDriver::IndiNyxDriver()
{
    /*----------------------------------------------------------------------------------------------------------------*/

    setVersion(1, 0);

    /*----------------------------------------------------------------------------------------------------------------*/

    m_WorkerRunning = true;

    m_WorkerThread = std::thread(&IndiNyxDriver::workerThreadFunc, this);

    /*----------------------------------------------------------------------------------------------------------------*/
}

/*--------------------------------------------------------------------------------------------------------------------*/

IndiNyxDriver::~IndiNyxDriver()
{
    /*----------------------------------------------------------------------------------------------------------------*/

    m_WorkerRunning = false;

    if(m_WorkerThread.joinable()) m_WorkerThread.join();

    /*----------------------------------------------------------------------------------------------------------------*/
}

/*--------------------------------------------------------------------------------------------------------------------*/

const char *IndiNyxDriver::getDefaultName()
{
    return "INDI ðŸ¡˜ Nyx Bridge";
}

/*--------------------------------------------------------------------------------------------------------------------*/

bool IndiNyxDriver::initProperties()
{
    /*----------------------------------------------------------------------------------------------------------------*/
    /* DEFAULT SETTINGS                                                                                               */
    /*----------------------------------------------------------------------------------------------------------------*/

    INDI::DefaultDevice::initProperties();

    /*----------------------------------------------------------------------------------------------------------------*/

    setDynamicPropertiesBehavior(false, false);

    setDriverInterface(GENERAL_INTERFACE);

    deleteProperty("CONNECTION");

    /*----------------------------------------------------------------------------------------------------------------*/
    /* MQTT SETTINGS                                                                                                  */
    /*----------------------------------------------------------------------------------------------------------------*/

    IUFillText(&MQTTSettingsT[0], "MQTT_URL", "URL", "mqtt://localhost:1883");
    IUFillText(&MQTTSettingsT[1], "MQTT_USERNAME", "Username", "");
    IUFillText(&MQTTSettingsT[2], "MQTT_PASSWORD", "Password", "");

    IUFillTextVector(
        &MQTTSettingsTP,
        MQTTSettingsT,
        3,
        getDeviceName(),
        "MQTT_SETTINGS",
        "MQTT Settings",
        MAIN_CONTROL_TAB,
        IP_RW,
        60,
        IPS_IDLE
    );

    /*----------------------------------------------------------------------------------------------------------------*/

    return true;
}

/*--------------------------------------------------------------------------------------------------------------------*/

void IndiNyxDriver::ISGetProperties(const char *dev)
{
    /*----------------------------------------------------------------------------------------------------------------*/

    defineProperty(&MQTTSettingsTP);

    /*----------------------------------------------------------------------------------------------------------------*/

    loadConfig(true, MQTTSettingsTP.name);
    IDSetText(&MQTTSettingsTP, nullptr);

    /*----------------------------------------------------------------------------------------------------------------*/

    INDI::DefaultDevice::ISGetProperties(dev);

    /*----------------------------------------------------------------------------------------------------------------*/
}

/*--------------------------------------------------------------------------------------------------------------------*/

bool IndiNyxDriver::ISNewText(const char *dev, const char *name, char *texts[], char *names[], int n)
{
    /*----------------------------------------------------------------------------------------------------------------*/

    if(dev != nullptr && strcmp(dev, getDeviceName()) == 0 && strcmp(name, MQTTSettingsTP.name) == 0)
    {
        /*------------------------------------------------------------------------------------------------------------*/

        IUUpdateText(&MQTTSettingsTP, texts, names, n);
        MQTTSettingsTP.s = IPS_OK;

        /*------------------------------------------------------------------------------------------------------------*/

        saveConfig(true, MQTTSettingsTP.name);
        IDSetText(&MQTTSettingsTP, nullptr);

        /*------------------------------------------------------------------------------------------------------------*/

        return true;

        /*------------------------------------------------------------------------------------------------------------*/
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    return INDI::DefaultDevice::ISNewText(dev, name, texts, names, n);

    /*----------------------------------------------------------------------------------------------------------------*/
}

/*--------------------------------------------------------------------------------------------------------------------*/

bool IndiNyxDriver::saveConfigItems(FILE *fp)
{
    /*----------------------------------------------------------------------------------------------------------------*/

    IUSaveConfigText(fp, &MQTTSettingsTP);

    /*----------------------------------------------------------------------------------------------------------------*/

    return true;
}

/*--------------------------------------------------------------------------------------------------------------------*/

void IndiNyxDriver::workerThreadFunc()
{
    /*----------------------------------------------------------------------------------------------------------------*/

    nyx_bridge_initialize();

    /*----------------------------------------------------------------------------------------------------------------*/

    while(m_WorkerRunning.load())
    {
        nyx_bridge_poll(
            MQTTSettingsT[0].text,
            MQTTSettingsT[1].text,
            MQTTSettingsT[2].text,
            25 /* ms */
        );
    }

    /*----------------------------------------------------------------------------------------------------------------*/

    nyx_bridge_finalize();

    /*----------------------------------------------------------------------------------------------------------------*/
}

/*--------------------------------------------------------------------------------------------------------------------*/
