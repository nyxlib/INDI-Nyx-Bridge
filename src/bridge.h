/* INDI-Nyx Driver
 * Author: JÃ©rÃ´me ODIER <jerome.odier@lpsc.in2p3.fr>
 * SPDX-License-Identifier: GPL-2.0-only
 */

/*--------------------------------------------------------------------------------------------------------------------*/

#pragma once

#include <stddef.h>
#include <stdint.h>

/*--------------------------------------------------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C" {
#endif

/*--------------------------------------------------------------------------------------------------------------------*/

typedef /*-*/ char *str_t;
typedef const char *STR_t;

/*--------------------------------------------------------------------------------------------------------------------*/
/* STRING BUILDER                                                                                                     */
/*--------------------------------------------------------------------------------------------------------------------*/

#define NYX_SB_NO_ESCAPE        (0x0000)
#define NYX_SB_ESCAPE_JSON      (1 << 0)
#define NYX_SB_ESCAPE_XML       (1 << 1)

/*--------------------------------------------------------------------------------------------------------------------*/

typedef struct
{
    struct nyx_string_builder_node_s *head;
    struct nyx_string_builder_node_s *tail;

} nyx_string_builder_t;

/*--------------------------------------------------------------------------------------------------------------------*/

nyx_string_builder_t *nyx_string_builder_new(void);

/*--------------------------------------------------------------------------------------------------------------------*/

void nyx_string_builder_free(
    /*-*/ nyx_string_builder_t *sb
);

/*--------------------------------------------------------------------------------------------------------------------*/

void nyx_string_builder_clear(
    /*-*/ nyx_string_builder_t *sb
);

/*--------------------------------------------------------------------------------------------------------------------*/

void nyx_string_builder_append_buff(
    /**/ nyx_string_builder_t *sb,
    uint32_t flags,
    size_t len,
    STR_t str
);

/*--------------------------------------------------------------------------------------------------------------------*/

void nyx_string_builder_append_n(
    /*-*/ nyx_string_builder_t *sb,
    uint32_t flags,
    STR_t args[],
    size_t n
);

/*--------------------------------------------------------------------------------------------------------------------*/

size_t nyx_string_builder_length(
    const nyx_string_builder_t *sb
);

/*--------------------------------------------------------------------------------------------------------------------*/

size_t nyx_string_builder_clength(
    const nyx_string_builder_t *sb
);

/*--------------------------------------------------------------------------------------------------------------------*/

str_t nyx_string_builder_to_string(
    const nyx_string_builder_t *sb
);

/*--------------------------------------------------------------------------------------------------------------------*/

#define nyx_string_builder_append(sb, flags, ...) ({                                                                   \
                                                                                                                       \
    STR_t args[] = {__VA_ARGS__};                                                                                      \
                                                                                                                       \
    nyx_string_builder_append_n(sb, flags, args, sizeof(args) / sizeof(STR_t));                                        \
})

/*--------------------------------------------------------------------------------------------------------------------*/

#define nyx_string_builder_from(flags, ...) ({                                                                         \
                                                                                                                       \
    STR_t args[] = {__VA_ARGS__};                                                                                      \
                                                                                                                       \
    nyx_string_builder_t *_sb = nyx_string_builder_new();                                                              \
                                                                                                                       \
    nyx_string_builder_append_n(_sb, flags, args, sizeof(args) / sizeof(STR_t));                                       \
                                                                                                                       \
    _sb;                                                                                                               \
})

/*--------------------------------------------------------------------------------------------------------------------*/
/* URL DISCOVERY                                                                                                      */
/*--------------------------------------------------------------------------------------------------------------------*/

STR_t nyx_discover_indi_url(void);

/*--------------------------------------------------------------------------------------------------------------------*/
/* XML -> JSON                                                                                                        */
/*--------------------------------------------------------------------------------------------------------------------*/

typedef void (*nyx_x2j_emit_fn)(size_t len, STR_t json);

/*--------------------------------------------------------------------------------------------------------------------*/

typedef struct nyx_x2j_ctx_s nyx_x2j_ctx_t;

/*--------------------------------------------------------------------------------------------------------------------*/

nyx_x2j_ctx_t *nyx_x2j_init(
    nyx_x2j_emit_fn emit_fn
);

void nyx_x2j_close(
    nyx_x2j_ctx_t *ctx
);

void nyx_x2j_feed(
    const nyx_x2j_ctx_t *ctx,
    size_t len,
    STR_t text
);

/*--------------------------------------------------------------------------------------------------------------------*/
/* JSON -> XML                                                                                                        */
/*--------------------------------------------------------------------------------------------------------------------*/

typedef void (*nyx_j2x_emit_fn)(size_t len, STR_t xml);

/*--------------------------------------------------------------------------------------------------------------------*/

typedef struct nyx_j2x_ctx_s nyx_j2x_ctx_t;

/*--------------------------------------------------------------------------------------------------------------------*/

nyx_j2x_ctx_t *nyx_j2x_init(
    nyx_x2j_emit_fn emit_fn
);

void nyx_j2x_close(
    nyx_j2x_ctx_t *ctx
);

void nyx_j2x_feed(
    const nyx_j2x_ctx_t *ctx,
    size_t len,
    STR_t text
);

/*--------------------------------------------------------------------------------------------------------------------*/
/* BRIDGE                                                                                                             */
/*--------------------------------------------------------------------------------------------------------------------*/

#define NYX_BRIDGE_NAME "INDI ðŸ¡˜ Nyx Bridge"

/*--------------------------------------------------------------------------------------------------------------------*/

void nyx_bridge_initialize();

void nyx_bridge_finalize();

/*--------------------------------------------------------------------------------------------------------------------*/

void nyx_bridge_poll(
    const char *mqtt_url,
    const char *mqtt_username,
    const char *mqtt_password,
    int ms
);

/*--------------------------------------------------------------------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

/*--------------------------------------------------------------------------------------------------------------------*/
